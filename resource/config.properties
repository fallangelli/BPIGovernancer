
#计算数据总量并行数
count_parallel=8

#证件号码校验，提取无效证件号使用的参数
#如名称包含valid关键字，则认为是迭代调用，会删除源表中变有效的结果
check_certno_table_name=qita
#根据源表分区数设置
check_certno_partition_count=2
#可以为0~9及A,B,C,X，ALL表示全部
check_certno_cert_type=ALL


check_certno_threadpool_max_size=1
check_certno_parallel=8

#一号多名合并使用的参数
#如名称包含_mergeInvalid关键字，则认为是迭代调用，会删除源文件中变有效的结果
merge_table_name=qita
merge_partition_count=128
merge_cert_type=t
merge_threadpool_max_size=64
merge_parallel=4

#提取有效分组的参数
extract_result_table_name=qita


#提取类型:0 全部 1 只做相似度提取 2 只做2名比较 3 只做3名比较 4 只做4名比较
extract_result_type = 0

#8进制,类型阈值，用类型位数表示
#取值可为:6只由汉字组成 5由汉字/空格组成 4只由汉字/空格/括号对组成
#   3由汉字/空格/括号对/英文字母、数字组成 2由汉字/空格/英文字符/括号对/其他字符组成 1其他
extract_result_type_threshold = -1
#8进制,首位阈值
#取值可为:1音字都不等 4音同字不同 6音同字同 7原始字同或音同
extract_result_bit_threshold = 2
#汉字的edit_distance_similarity
sim_2_dis_threshold = 30

sim_3_1_2_dis_threshold = 30
sim_3_1_3_dis_threshold = 30
sim_3_2_3_dis_threshold = 30

sim_4_1_2_dis_threshold = 30
sim_4_1_3_dis_threshold = 30
sim_4_1_4_dis_threshold = 30
sim_4_2_3_dis_threshold = 30
sim_4_2_4_dis_threshold = 30
sim_4_3_4_dis_threshold = 30


#拼音的JARO_WINKLER_SIMILARITY
sim_2_jw_threshold = 30

sim_3_1_2_jw_threshold  = 90
sim_3_1_3_jw_threshold  = 90
sim_3_2_3_jw_threshold  = 90

sim_4_1_2_jw_threshold  = 90
sim_4_1_3_jw_threshold  = 90
sim_4_1_4_jw_threshold  = 90
sim_4_2_3_jw_threshold  = 90
sim_4_2_4_jw_threshold  = 90
sim_4_3_4_jw_threshold  = 90

#匹配时过滤的用户名
extract_result_except = 无名氏,无户名,佚名,暂缺,银联测试，测试


#在线验证行政区划代码使用的参数
check_dic_code_table_name=REGION_CHECK
check_dic_code_thread_process_count=5000
check_dic_code_threadpool_max_size=10

